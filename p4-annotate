#!/usr/bin/env bash
#
# Description: prints p4 information of a specific changelist
# Author: Arnon Zilca
#

set -e

# get script dir path
SCRIPT_PATH="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd)"

source "${SCRIPT_PATH}/p4-help-functions"

usage() {
    echo "$(basename $0) -- prints the relevant changelist of a specific line in a file" >&2
    echo "usage: $(basename $0) [options] file line" >&2
    echo    "  -v   verbose changelist print" >&2
    echo    "  -n   no colors" >&2
    echo    "  -o   force colors (when piping)" >&2
}

BRIEF="-b"

while getopts "h?vno" opt; do
    case "${opt}" in
        h)
            usage
            exit 0
            ;;
        v)
            BRIEF=
            ;;
        n)
            uncolor     # sourced in p4-help-functions
            ;;
        o)
            force_color # sourced in p4-help-functions
            ;;
        *)
            usage
            exit 1
            ;;
    esac
done
shift $(( OPTIND - 1 ))

if [[ $# -ne 2 ]]; then
    echo "${RED}Bad arguments.${NO_COLOR}" >&2
    usage
    exit 1
fi

FILE="$1"
LINE="$2"
DESCRIPTION_LINE="2"
CHANGELISTS_INNER_TEXT="CL,cl,Changelist,changelist,copy from,edit from,merge from"

changelist=$(p4 annotate -cq ${FILE} | sed -e "${LINE}q;d" | sed -e 's/:.*//g')

if [[ -z $changelist ]]; then
    echo -e "${RED}Annotation not found... :(${NO_COLOR}" >&2
    exit 2
fi

while [[ -n "$changelist" ]] && [[ "$changelist" != *[!0-9]* ]]; do # exist && a number
    res=$("${SCRIPT_PATH}/p4-show-changelist" $BRIEF "$changelist")
    echo "$res"
    echo
    # extract inner changelist (if exists)
    changelist=$(echo "$res" | sed -e "${DESCRIPTION_LINE}q;d" | sed -r "s/.*[${CHANGELISTS_INNER_TEXT}][ ,-]([0-9]*).*/\1/g")
done
